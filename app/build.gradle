plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '2.24.1'
}

version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation group: 'com.alphacephei', name: 'vosk', version: '0.3.45'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.2")
    implementation("com.google.guava:guava:32.0.1-jre")
    implementation "org.bytedeco:javacv-platform:1.5.8"
    implementation "org.bytedeco:ffmpeg-platform:4.4-1.5.8"
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'ch.qos.logback:logback-classic:1.5.6'  // реализация SLF4J
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

javafx {
    version = "21"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
}

application {
    mainClass = 'ui.LoadStenogrammApp'
//    mainClass = 'logic.persistence.InitDatabase'
    applicationDefaultJvmArgs = [
            '-Xms5G',
            '-Xmx5G',
            "--add-modules=javafx.controls,javafx.fxml,javafx.graphics",
            "-Dprism.verbose=true"
    ]
}

tasks.withType(JavaExec) {
    jvmArgs = [
            "--module-path", classpath.asPath,
            "--add-modules", "javafx.controls,javafx.fxml,javafx.graphics"
    ]
}
configurations.all {
    resolutionStrategy {
        force 'net.java.dev.jna:jna:5.13.0'
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'Vstrecheslav'
    }

    jpackage() {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            imageOptions += ['--icon', 'src/main/resources/icon.ico']
        }
        imageOptions += ['--vendor', 'Vsu Production']
        installerOptions += [
                '--vendor', 'Vsu Production',
                '--app-version', version
        ]
    }
}
