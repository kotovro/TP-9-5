1. Формулировка коммита должна представлять из себя описание того, что делает коммит. Желательно, чтобы так же коммит содежла название ветки, к которй он относится. Пример: "feature/controller Rafactors method doSmt() in controller" Глагол должен быть в третьем лице. При работе над фичой коммит должен начинаться с названия ветки в формате feature/controller
2. В ветке main находится стабильный код, готовый для выпуска. Код в ней - результат объединения с develop
3. В develop - то, что сейсчас является разрабатываемым. Оно отражает текущее состояние разработки проекта и служит основой для других
4. fix - ветки, которые  отпочковываются от develop для корреткировки багов
5. ветка feature - создается при добавлении новых функциональных возможностей в проект. Начинаются от ветки develop и заканчиваются там, как заканчивается разработка функциональности в этой вектке.

 Общие соображения
 Процесс работы над фичой
 1. Добавление себе локально всех изменений: git pull develop
 1. Переключение в develop: git checkout develop 
 2. Создание ветки с фичой: git checkout [feature-name] (назваине фич, если состоит из нескольких слов, идет через тире)
 3. После того, как была закончена работа на фичой, нужно переключиться в develop, слить её с веткой develop, и после этого удалить веткой с фичой. Команды: git checkout develop; git merge [new feature]; git branch -d [new feature]
 4. Для вливания фичи нужно на GitHub создать pull request, который должен одобрить один из разработчиков  
 Чтобы залить изменения используем git push.
 
 Все вышеукзанные операции  можно осуществлять с помощью графического интерфейса в IDE.
 
Подготовка к релизу и релиз
Как только мы хотим выпустить новый релиз нашего приложения, необходимо к нему подготовиться.
Мы должны находиться в ветке develop
Вносим финальные правки и изменения.
Переключаемся на main ветку и объединяем ветку разработки с main веткой (git checkout main; git merge develop)

Исправление багов (fix):
Если мы заметили какие-то серьезные баги, которые нужно исправить, то прибегаем к фиксам. Сам фикс
представляет из себя срочное исправление критической ошибки или уязвимости в программе.
Механизм:
Создаем и переключаемся на ветку для фикса (git checkout git checkout --b fix)
Вносим в ней необходимые исправления для устранения бага
Переключаемся на main ветку и объединяем ветку хотфикса с main веткой (git checkout main; git merge fix git checkout main; git merge main)
